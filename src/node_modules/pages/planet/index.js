import React, { useState, useEffect } from 'react'
import axios from 'axios'
import { Link } from 'react-router-dom'

import './index.css'
import Search from 'components/search'
import Loader from 'components/loader'

const Planet = ({ match }) => {
    const [planet, setPlanet] = useState({})
    const [isLoading, setIsLoading] = useState(false)

    const fetchPlanet = () => {
        setIsLoading(true)
        const id = match.params.id
        const apiUrl = `https://api.le-systeme-solaire.net/rest/bodies/${id}`
        const req = axios.get(apiUrl)
        req.then(res => {
            setPlanet(res.data)
            setIsLoading(false)
        }).catch(err => {
            console.log(err.errors)
        })
    }

    useEffect(() => {
        fetchPlanet()
        // eslint-disable-next-line
    }, [match.params.id])

    const getId = url => {
        const arr = url.split('/')
        return arr[arr.length - 1]
    }

    function renderMoons(moons) {
        return (
            <ul className="inline-list">
                {
                    moons.map((moon, index) => (
                        <li key={index} className="lead">
                            <Link to={`/planet/${getId(moon.rel)}`} className="btn btn-lg btn-default">
                                {moon.moon}
                            </Link>
                        </li>
                    ))
                }
            </ul>
        )
    }

    function renderAroundPlanet(planet) {
        return (
            <h4 className="lead">
                <Link to={`/planet/${getId(planet.rel)}`} className="btn btn-lg btn-default">
                    {`${planet.planet.charAt(0).toUpperCase()}${planet.planet.substr(1)}`}
                </Link>
            </h4>

        )
    }

    if (isLoading) {
        return <Loader />
    }

    return (
        <div className="container">
            <div className="row">
                <span className="btn btn-link btn-lg">
                    <Link to="/">
                        <i className="glyphicon glyphicon-home"></i> &nbsp; Home page
                    </Link>
                </span>
                <div className="col-sm-3 pull-right">
                    <Search />
                </div>
                <h1 className="text-center">{planet.englishName}</h1>
                <div className="col-xs-12 lead">
                    <h2>Parameters this planet:</h2>
                    <div>
                        <b>Semimajor Axis:</b> {(planet.semimajorAxis / 1000).toFixed(1)} thousand km
                    </div>
                    <div>
                        <b>Diameter:</b> {(planet.meanRadius / 500).toFixed(3)} thousand km
                    </div>
                    <div>
                        <b>Gravity:</b> {planet.gravity} m.s<sup>-2</sup>
                    </div>
                    <div>
                        <b>Sideral Orbit:</b> {planet.sideralOrbit} days
                    </div>
                    <div>
                        <b>Sideral Rotation:</b> {planet.sideralRotation} hours
                    </div>
                    {planet.discoveredBy &&
                        (<><hr /><div>
                            <b>Discovered By:</b> {planet.discoveredBy}
                        </div></>)
                    }
                    {planet.discoveryDate &&
                        (<div>
                            <b>Discovery Date:</b> {planet.discoveryDate}
                        </div>)
                    }
                    {planet.moons && <><hr /><h3>Satellites ({planet.moons.length}):</h3></>}
                    {planet.moons ? renderMoons(planet.moons) : null}
                    {planet.aroundPlanet && <><hr /><h3>Is a satellite of the planet:</h3></>}
                    {planet.aroundPlanet ? renderAroundPlanet(planet.aroundPlanet) : null}
                </div>
            </div>
        </div>
    )
}

export default Planet